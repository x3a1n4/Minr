@namespace teraRabbitsGlobals
    # The world that this was enabled in
    String world
@endnamespace

@namespace teraRabbitsUtils
    @class Colour
        # Default constructor
        Colour(Float r, Float g, Float b)
        Colour(Float r, Float g, Float b, Float a)
        Float r
        Float g
        Float b
        Float a

        Double distance(teraRabbitsUtils::Colour other)
    @endclass

    @class Pattern
        # Sets a pattern with a get method
        # Will just be a single block for now
        # But new constructors could add cool patterns in the future
        Pattern(String[] blocks, String type)
        Pattern(String[] blocks, Double[] weights, String type)
        String[] blocks
        String type

        String get(BlockLocation targetLocation)
    @endclass

    @class BlockAlt
        # Constructors
        BlockAlt(String type, String block)
        String type
        String block
    @endclass
    stringHashMap::SHashMap blockAltLookup

    @class BlockChange
        # Sets the block to the given "to"
        BlockChange(Block block, String to)
        Block block
        String originalBlock
        String to

        revert()
    @endclass

    @class BlockData
        # Constructors
        BlockData(String block, Colour colour)
        BlockData(String block, Colour colour, BlockAlt[] alts)
        String block
        Colour colour
        teraRabbitsUtils::BlockAlt[] alts
    @endclass

    @class Action
        # All tool usages should be logged through Actions, so that they can be undone
        Action(String name)
        String name
        teraRabbitsUtils::BlockChange[] allBlocksChanged

        # Add a block change to this action
        add(teraRabbitsUtils::BlockChange change)
        # get number of blocks changed
        Int length()
        # undo this action
        undo()
    @endclass
    teraRabbitsUtils::Action[] actionList

    @class Selection
        # Default constructor
        Selection()
        addBlockToSelection(BlockLocation location)
        addCuboidToSelection(BlockLocation location1, BlockLocation location2)
        # Reset the selection - so that we only need to do initialize the hashmap once
        resetSelection()
        BlockLocation[] getBlocks()

        # Render the selection in-world
        renderSelection()

        stringHashMap::SHashMap blocks
        BlockVector3 lowerBound
        BlockVector3 upperBound
    @endclass

    @class Clipboard
        Clipboard()
        createFromSelection(teraRabbitsUtils::Selection selection)
        # If Ignore Air true, will ignore air blocks
        pasteIntoWorldWithOffset(teraRabbitsUtils::Action action, BlockVector3 offset, Boolean ignoreAir)
        # Rotates in Y by degrees
        # Not fully implemented
        rotateY(BlockVector3 pivot, Double degrees)
        # Flips on specific axis ["x", "y", "z"]
        # Not implemented
        flip(BlockVector3 pivot, String axis)

        Block[] blocks
        # Offset of copy position
        BlockVector3 offset
    @endclass

    initializeBlockData()
    # Try to set a block given an action
    trySetBlock(teraRabbitsUtils::Action action, BlockLocation location, String block)
    log(String message)

    # Get the block relative to a target block
    Block getRelativeBlock(Block block, Int x, Int y, Int z)
    # convert a block type to its vanilla variantt
    String getVanilla(String type)

    BlockData[] bd
    String[] blockTypes
@endnamespace

@namespace teraRabbitsTools
    # MVP: 
    #   Tool to select pattern
    #   Shulker box named mask in hotbar will limit mask
    
    # sets block selection
    teraRabbitsUtils::Pattern pattern
    teraRabbitsUtils::Selection selection
    teraRabbitsUtils::Clipboard clipboard
    selectSingleBlockPattern(Block targetBlock)
    # Create sphere at targetBlock
    sphere(Block targetBlock, Int size)
    # Paint at the target block (don't replace air, use block replacements)
    paint(Block targetBlock, Int size)
    # Erase in a sphere
    erase(Block targetBlock, Int size)
    # Smooth area around targetBlock
    smooth(Block targetBlock, Int size)
    # Pull area towards player (like spikes)
    pull(Block targetBlock, Player targetPlayer, Int size)
    # Flatten area (like a mesa)
    flatten(Block targetBlock, Int size)
    # set cubiod selection
    cuboidSelect(Block targetBlock)
    Int selectionPosition
    # Extend cuboid to encompass target block
    cuboidExtend(Block targetBlock)
    # Set blocks in selection (rclick on block)
    set(Block targetBlock)
    # Copy to clipboard from block location
    copy(Block targetBlock)
    # Paste clipboard at block location
    paste(Block targetBlock)
    # Stack selection in facing direction
    stack(Player targetPlayer, Int size)

    # Replace the block at the target block
    replace(Block targetBlock, Item heldItem)

    # undo
    undo()

    # Spawn invisible rabbit (at top middle of block)
    spawnRabbit(Block targetBlock)

    # End the session
    endSession(Player targetPlayer)
@endnamespace

@namespace teraRabbits
    # The main loop
    mainloop()
    enableClickHandler(Player player)
    disableClickHandler(Player player)
    # The player using the scripts
    Player targetPlayer
    # The ghast that holds onGhastClick
    Entity ghastEntity

    # The ghast click function
    onGhastClick(Player player)
@endnamespace